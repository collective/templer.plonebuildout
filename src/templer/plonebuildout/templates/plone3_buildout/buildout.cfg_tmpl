[buildout]
parts =
#if not $eggifiedplone
    plone
#end if
#if not $zope2_install
    zope2
#end if
    productdistros
    instance
    zopepy

#if $eggifiedplone
\# Change the number here to change the version of Plone being used
extends = 
#if $eggifiedzope
    http://download.zope.org/Zope2/index/${zope2_version}/versions.cfg
#end if
    http://dist.plone.org/release/${plone_version}/versions.cfg
#end if
versions = versions


\# Add additional egg download sources here. dist.plone.org contains archives
\# of Plone packages.
find-links =
#if $eggifiedplone
    http://dist.plone.org/release/${plone_version}
#else
    http://dist.plone.org
#end if
    http://dist.plone.org/thirdparty

\# Add additional eggs here
#if not $eggifiedplone
\# elementtree is required by Plone
#end if
eggs =
#if not $eggifiedplone
    elementtree
#end if

\# Reference any eggs you are developing here, one per line
\# e.g.: develop = src/my.package
develop =

#if not $eggifiedplone
[versions]
\# Version pins for new style products go here
plone.recipe.zope2instance = 3.6
#end if

#if $tarballs
[plone]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/plone.recipe.plone
recipe = plone.recipe.plone==${plone_version}
#if $plone_products_install
\# By overriding the download URLs and making them an empty list, we
\# Make sure our own products directory takes precedence
urls =
#end if
#end if

#if $z29tarballs
[plone]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls = http://launchpad.net/plone/2.5/${plone_version}/+download/Plone-${plone_version}.tar.gz
nested-packages = Plone-${plone_version}.tar.gz
version-suffix-packages = Plone-${plone_version}.tar.gz
#end if

#if not $zope2_install
[zope2]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/plone.recipe.zope2install
recipe = plone.recipe.zope2install
fake-zope-eggs = true
#if $tarballs
url = \${plone:zope2-url}
#end if
#if $z29tarballs
url = http://www.zope.org/Products/Zope/${zope2_version}/Zope-${zope2_version}-final.tgz
#end if
#if $eggifiedplone
url = \${versions:zope2-url}
#end if
#end if

\# Use this section to download additional old-style products.
\# List any number of URLs for product tarballs under URLs (separate
\# with whitespace, or break over several lines, with subsequent lines
\# indented). If any archives contain several products inside a top-level
\# directory, list the archive file name (i.e. the last part of the URL,
\# normally with a .tar.gz suffix or similar) under 'nested-packages'.
\# If any archives extract to a product directory with a version suffix, list
\# the archive name under 'version-suffix-packages'.
[productdistros]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
#if $zope2_install
#if not $eggifiedzope
zope2-location = ${zope2_install}
#end if
#else
zope2-location = \${zope2:location}
#end if
user = ${zope_user}:${zope_password}
http-address = ${http_port}
#if $debug_mode == 'on'
debug-mode = on
#else
\#debug-mode = on
#end if
#if $verbose_security == 'on'
verbose-security = on
#else
\#verbose-security = on
#end if
#if $eggifiedzope
blob-storage = var/blobstorage
#end if
\# If you want Zope to know about any additional eggs, list them here.
\# This should include any development eggs you listed in develop-eggs above,
\# e.g. eggs = Plone my.package
eggs =
#if $eggifiedzope
    Zope2
#end if
#if $eggifiedplone
    Plone
    \${buildout:eggs}
#end if
#if $tarballs
    \${buildout:eggs}
    \${plone:eggs}
#end if
#if $z29tarballs
    \${buildout:eggs}
#end if
#if $eggifiedzope
environment-vars =
    zope_i18n_compile_mo_files true
#end if

\# If you want to register ZCML slugs for any packages, list them here.
\# e.g. zcml = my.package my.other.package
zcml =

products =
    \${buildout:directory}/products
    \${productdistros:location}
#if $tarballs
#if not $plone_products_install
    \${plone:products}
#else
    ${plone_products_install}
#end if
#end if
#if $z29tarballs
#if not $plone_products_install
    \${plone:location}
#else
    ${plone_products_install}
#end if
#end if

[zopepy]
\# For more information on this step and configuration options see:
\# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = \${instance:eggs}
interpreter = zopepy
#if not $eggifiedzope
#if $zope2_install
extra-paths = ${zope2_install}/lib/python
#else
extra-paths = \${zope2:location}/lib/python
#end if
#end if
scripts = zopepy
